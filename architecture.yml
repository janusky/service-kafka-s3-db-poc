# version: > "3"

services:
  ceph:
    extends:
      file: common-services.yml
      service: ceph
    container_name: ceph
    hostname: ceph
    # environment:
    #   # Default 100 GB | 10073741824 (10GB)
    #   - BLUESTORE_BLOCK_SIZE=10073741824
    ports:
      - ${CEPH_DOCKER_PORT:-9280}:9280
      - ${CEPH_DOCKER_METRICS_PORT:-9283}:9283
    volumes:
      - var_lib_ceph:/var/lib/ceph
      - etc_ceph:/etc/ceph
    networks:
      default:
        ipv4_address: 172.240.49.25

  zookeeper-1:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: zookeeper-1
    container_name: zookeeper-1
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_SERVER_ID: "1"
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
      ZOOKEEPER_4LW_COMMANDS_WHITELIST: "*"
      EXTRA_ARGS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=1234:/usr/share/jmx_exporter/zookeeper.yml
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
    volumes:
    - ./jmx-exporter:/usr/share/jmx_exporter/

  zookeeper-2:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: zookeeper-2
    container_name: zookeeper-2
    ports:
      - 2182:2181
    environment:
      ZOOKEEPER_SERVER_ID: "2"
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
      ZOOKEEPER_4LW_COMMANDS_WHITELIST: "*"
      EXTRA_ARGS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=1234:/usr/share/jmx_exporter/zookeeper.yml
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
    volumes:
    - ./jmx-exporter:/usr/share/jmx_exporter/

  zookeeper-3:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: zookeeper-3
    container_name: zookeeper-3
    ports:
      - 2183:2181
    environment:
      ZOOKEEPER_SERVER_ID: "3"
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
      ZOOKEEPER_4LW_COMMANDS_WHITELIST: "*"
      EXTRA_ARGS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=1234:/usr/share/jmx_exporter/zookeeper.yml
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
    volumes:
    - ./jmx-exporter:/usr/share/jmx_exporter/

  kafka-1:
    image: confluentinc/cp-kafka:6.0.0
    hostname: kafka-1
    container_name: kafka-1
    ports:
      - 19092:19092
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      KAFKA_LISTENERS: "INTERNAL://kafka-1:9092,EXTERNAL://:19092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka-1:9092,EXTERNAL://localhost:19092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183"
      KAFKA_BROKER_ID: "1"
      KAFKA_OPTS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=1234:/usr/share/jmx_exporter/kafka-broker.yml
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      KAFKA_MIN_INSYNC_REPLICAS: 2
    volumes:
    - ./jmx-exporter:/usr/share/jmx_exporter/

  kafka-2:
    image: confluentinc/cp-kafka:6.0.0
    hostname: kafka-2
    container_name: kafka-2
    ports:
      - 19093:19093
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183"
      KAFKA_LISTENERS: "INTERNAL://kafka-2:9092,EXTERNAL://:19093"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka-2:9092,EXTERNAL://localhost:19093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_BROKER_ID: "2"
      KAFKA_OPTS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=1234:/usr/share/jmx_exporter/kafka-broker.yml
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      KAFKA_MIN_INSYNC_REPLICAS: 2
    volumes:
    - ./jmx-exporter:/usr/share/jmx_exporter/

  kafka-3:
    image: confluentinc/cp-kafka:6.0.0
    hostname: kafka-3
    container_name: kafka-3
    ports:
      - 19094:19094
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183"
      KAFKA_LISTENERS: "INTERNAL://kafka-3:9092,EXTERNAL://:19094"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka-3:9092,EXTERNAL://localhost:19094"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_BROKER_ID: "3"
      KAFKA_OPTS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=1234:/usr/share/jmx_exporter/kafka-broker.yml
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      KAFKA_MIN_INSYNC_REPLICAS: 2
    volumes:
    - ./jmx-exporter:/usr/share/jmx_exporter/

  database:
    image: mysql:5.7.25
    hostname: database
    container_name: database
    environment:
      MYSQL_DATABASE: dataflow
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: rootpw
    ports:
      - "3306:3306"
    volumes:
      - ./database/dump.sql:/docker-entrypoint-initdb.d/1-init.sql
      - database:/var/lib/mysql

  write-service:
    image: openjdk:8
    container_name: write-service
    working_dir: /app
    depends_on:
      - ceph
      - producer-data
    environment:
      - PORT=${WRITE_APP_PORT:-9000}
      - SPRING_PROFILES_ACTIVE=dev
      - LOG_LEVEL=INFO
      - ACTUATOR_PORT=8090
      - ACTUATOR_HOST=0.0.0.0
      - APP_PRODUCER_URI=http://producer-data:9001
      # - JAVA_OPTS=-Xmx384M
      - S3_ACCESS_KEY=sandboxKey
      - S3_SECRET_KEY=sandboxSecret
      - S3_BUCKET=sandbox-bk
      # - S3_ENDPOINT=ceph:8080
      - S3_ENDPOINT=172.240.49.25:9280
      - S3_SSL_ENABLED=false
    ports:
      - 9000:${WRITE_APP_PORT:-9000}
      - "8090:8090"
    volumes:
      - ./services/write_app:/app
      - app_logs:/app/logs
    entrypoint: sh -c "java $${JAVA_OPTS} -jar publisher-http-s3-0.0.1-SNAPSHOT.jar"

  producer-data:
    image: openjdk:8
    container_name: producer-data
    hostname: producer-data
    working_dir: /app
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      - JAVA_OPTS=-javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=1234:/usr/share/jmx_exporter/kafka-producer.yml -Xmx128M -Xms128M
      # Optionally the Actuator port can be changed
      - MANAGEMENT_SERVER_PORT=8091
      - MANAGEMENT_SERVER_SECURITY_ENABLED=false
      - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=*
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_METRICS_TAGS_APPLICATION=producer-data
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka-1:9092,kafka-2:9092,kafka-3:9092
    ports:
      - "9001:9001"
      - "8091:8091"
    volumes:
      - ./producers/send_app:/app
      - ./jmx-exporter:/usr/share/jmx_exporter
    entrypoint: sh -c "java $${JAVA_OPTS} -jar http-source-kafka-3.0.0-SNAPSHOT.jar --server.port=9001 --spring.cloud.stream.bindings.output.destination=insert-data"

  consumer-insert:
    image: openjdk:8
    container_name: consumer-insert
    working_dir: /app
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - database
    environment:
      - MANAGEMENT_SERVER_PORT=8093
      - MANAGEMENT_SERVER_SECURITY_ENABLED=false
      - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=*
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_METRICS_TAGS_APPLICATION=consumer-insert
      - MANAGEMENT_METRICS_TAGS_REGION=consumer-region
    ports:
      - "8093:8093"
    volumes:
      - ./consumers/insert_app:/app
      - ./jmx-exporter:/usr/share/jmx_exporter
    command:
      # - '--server.port=9002'
      - '--spring.cloud.streamapp.security.enabled=false'
      - '--spring.datasource.url=jdbc:mariadb://database:3306/Demo'
      - '--spring.datasource.username=root'
      - '--spring.datasource.password=rootpw'
      - '--jdbc.consumer.table-name=Post'
      - '--jdbc.consumer.columns=transaction,transaction_customer,id_customer,filename:attach.filename,url:attach.url,size:attach.size,mimetype:attach.mimetype'
      - '--spring.cloud.stream.kafka.binder.brokers=kafka-1:9092,kafka-2:9092,kafka-3:9092'
      - '--spring.cloud.stream.bindings.input.destination=insert-data'
    entrypoint: "java -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=1234:/usr/share/jmx_exporter/kafka-consumer.yml -jar jdbc-sink-kafka-3.0.0-SNAPSHOT.jar"

volumes:
  database: {}
  app_logs: {}
  var_lib_ceph: {}
  etc_ceph: {}

networks:
  default:
    # driver: bridge
    ipam:
      config:
        - subnet: 172.240.49.6/24
